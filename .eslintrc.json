{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "overrides": [
    {
      "files": "*.spec.ts",
      "rules": {
        "@typescript-eslint/no-unused-expressions": "off"
      }
    },
    {
      "files": "*.tsx",
      "rules": {
        "@typescript-eslint/consistent-type-assertions": [
          "error",
          {
            "assertionStyle": "as"
          }
        ]
      }
    }
  ],
  "rules": {
    "@typescript-eslint/array-type": "error",
    "@typescript-eslint/consistent-indexed-object-style": [
      "error",
      "index-signature"
    ],
    "@typescript-eslint/consistent-type-assertions": [
      "error",
      {
        "assertionStyle": "angle-bracket"
      }
    ],
    "@typescript-eslint/explicit-function-return-type": "error",
    "@typescript-eslint/explicit-member-accessibility": [
      "error",
      {
        "accessibility": "explicit"
      }
    ],
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "multiline": {
          "delimiter": "none"
        },
        "singleline": {
          "delimiter": "comma"
        },
        "multilineDetection": "brackets"
      }
    ],
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": [
          // Index signature
          "signature",

          // Fields
          "public-static-field",
          "protected-static-field",
          "private-static-field",

          "public-decorated-field",
          "protected-decorated-field",
          "private-decorated-field",

          "public-instance-field",
          "protected-instance-field",
          "private-instance-field",

          "public-abstract-field",
          "protected-abstract-field",
          "private-abstract-field",

          "public-field",
          "protected-field",
          "private-field",

          // Constructors
          "public-constructor",
          "protected-constructor",
          "private-constructor",

          // Static
          "public-static-get",
          "protected-static-get",
          "private-static-get",

          "public-static-set",
          "protected-static-set",
          "private-static-set",

          "public-static-method",
          "protected-static-method",
          "private-static-method",

          // Getters
          "public-decorated-get",
          "protected-decorated-get",
          "private-decorated-get",

          "public-instance-get",
          "protected-instance-get",
          "private-instance-get",

          "public-abstract-get",
          "protected-abstract-get",
          "private-abstract-get",

          "public-get",
          "protected-get",
          "private-get",

          // Setters
          "public-decorated-set",
          "protected-decorated-set",
          "private-decorated-set",

          "public-instance-set",
          "protected-instance-set",
          "private-instance-set",

          "public-abstract-set",
          "protected-abstract-set",
          "private-abstract-set",

          // Methods
          "public-decorated-method",
          "protected-decorated-method",
          "private-decorated-method",

          "public-instance-method",
          "protected-instance-method",
          "private-instance-method",

          "public-abstract-method",
          "protected-abstract-method",
          "private-abstract-method"
        ]
      }
    ],
    "@typescript-eslint/method-signature-style": [
      "error",
      "method"
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": [ "camelCase" ],
        "trailingUnderscore": "forbid",
        "leadingUnderscore": "forbid"
      },
      {
        "selector": "parameter",
        "format": [ "camelCase" ],
        "trailingUnderscore": "allow"
      },
      {
        "selector": [ "property", "parameterProperty" ],
        "format": [ "camelCase" ],
        "modifiers": [ "private" ],
        "leadingUnderscore": "require"
      },
      {
        "selector": ["class", "enum", "enumMember"],
        "format": [ "PascalCase" ]
      },
      {
        "selector": "interface",
        "format": [ "PascalCase" ],
        "prefix": [ "I" ]
      },
      {
        "selector": "typeParameter",
        "format": [ "PascalCase" ],
        "prefix": [ "T" ]
      }
    ],
    "@typescript-eslint/no-confusing-non-null-assertion": "error",
    "@typescript-eslint/no-confusing-void-expression": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-empty-interface": "off",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-extra-non-null-assertion": "error",
    "@typescript-eslint/no-extraneous-class": "error",
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/no-inferrable-types": "off",
    "@typescript-eslint/no-invalid-void-type": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/no-unnecessary-condition": "error",
    "@typescript-eslint/no-unnecessary-qualifier": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-unnecessary-type-constraint": "error",
    "@typescript-eslint/prefer-as-const": "error",
    "@typescript-eslint/prefer-enum-initializers": "error",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-includes": "error",
    "@typescript-eslint/prefer-literal-enum-member": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-readonly": "error",
    "@typescript-eslint/prefer-reduce-type-parameter": "error",
    "@typescript-eslint/prefer-return-this-type": "error",
    "@typescript-eslint/restrict-plus-operands": "error",
    "@typescript-eslint/strict-boolean-expressions": "error",
    "@typescript-eslint/type-annotation-spacing": "error",
    "@typescript-eslint/typedef": [
      "error",
      {
        "arrayDestructuring": false,
        "arrowParameter": false,
        "memberVariableDeclaration": true,
        "objectDestructuring": true,
        "parameter": true,
        "propertyDeclaration": true,
        "variableDeclaration": false,
        "variableDeclarationIgnoreFunction": false
      }
    ],
    "brace-style": "off",
    "@typescript-eslint/brace-style": ["error"],
    "comma-dangle": "off",
    "@typescript-eslint/comma-dangle": ["error", "always-multiline"],
    "comma-spacing": "off",
    "@typescript-eslint/comma-spacing": ["error"],
    "default-param-last": "off",
    "@typescript-eslint/default-param-last": ["error"],
    "func-call-spacing": "off",
    "@typescript-eslint/func-call-spacing": ["error"],
    "indent": "off",
    "@typescript-eslint/indent": ["error"],
    "keyword-spacing": "off",
    "@typescript-eslint/keyword-spacing": ["error"],
    "lines-between-class-members": "off",
    "@typescript-eslint/lines-between-class-members": ["off"],
    "no-array-constructor": "off",
    "@typescript-eslint/no-array-constructor": ["error"],
    "no-dupe-class-members": "off",
    "@typescript-eslint/no-dupe-class-members": ["error"],
    "no-duplicate-imports": "off",
    "@typescript-eslint/no-duplicate-imports": ["error"],
    "no-extra-semi": "off",
    "@typescript-eslint/no-extra-semi": ["error"],
    "no-implied-eval": "off",
    "@typescript-eslint/no-implied-eval": ["error"],
    "no-invalid-this": "off",
    "@typescript-eslint/no-invalid-this": ["error"],
    "no-loop-func": "off",
    "@typescript-eslint/no-loop-func": ["error"],
    "no-redeclare": "off",
    "@typescript-eslint/no-redeclare": ["error"],
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": ["error"],
    "@typescript-eslint/no-throw-literal": "error",
    "no-unused-expressions": "off",
    "@typescript-eslint/no-unused-expressions": ["error"],
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "_$" }],
    "object-curly-spacing": "off",
    "@typescript-eslint/object-curly-spacing": ["error", "always"],
    "padding-line-between-statements": "off",
    "@typescript-eslint/padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": "*",
        "next": [ "class", "interface", "type", "function", "return" ]
      },
      {
        "blankLine": "always",
        "prev": "import",
        "next": "*"
      },
      {
        "blankLine": "never",
        "prev": "import",
        "next": "import"
      },
      {
        "blankLine": "always",
        "prev": "multiline-block-like",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": "multiline-block-like"
      }
    ],
    "quotes": "off",
    "@typescript-eslint/quotes": ["error", "single"]
  }
}